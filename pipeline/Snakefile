import pathlib
from glob import glob

DATA_DIR = pathlib.Path('data')
AIA_CHANNELS = ['94', '131', '171', '193', '211', '335']

configfile: "config.yml"

rule download_eis_data:
    output:
        directory(DATA_DIR / 'EIS' / 'level_1')
    script:
        "download_eis_data.py"

rule fit_eis_data:
    input:
        DATA_DIR / 'EIS' / 'level_1'
    output:
        directory(DATA_DIR / 'EIS' / 'level_2')
    script:
        "fit_eis_data.py"

rule correct_eis_pointing:
    input:
        DATA_DIR / 'EIS' / 'level_2'
    output:
        directory(DATA_DIR / 'EIS' / 'level_2.5')
    script:
        "correct_eis_pointing.py"
        
rule download_xrt_data:
    output:
        directory(DATA_DIR / 'XRT' / 'level_2')
    script:
        "download_xrt_data.py"
        
rule correct_xrt_pointing:
    input:
        DATA_DIR / 'XRT' / 'level_2',
        DATA_DIR / 'EIS' / 'level_2.5'
    output:
        directory(DATA_DIR / 'XRT' / 'level_2.5')
    script:
        "correct_xrt_pointing.py"

rule stack_aia_data:
    input:
        DATA_DIR / 'EIS' / 'level_2.5'
    output:
        directory(DATA_DIR / 'AIA' / 'level_2' / '{channel}')
    params:
        channel=lambda wildcards: int(wildcards.channel)
    script:
        "stack_aia_data.py"
        
rule trace_loop_aia:
    input:
        expand(DATA_DIR / 'AIA' / 'level_2' / '{channel}', channel=AIA_CHANNELS)
    output:
        DATA_DIR / 'AIA' / 'loop_cutouts.nc'
    params:
        channels=AIA_CHANNELS
    script:
        "trace_loop_aia.py"
        
rule trace_loop_hinode:
    input:
        DATA_DIR / '{instrument}' / 'level_2.5',
        DATA_DIR / 'AIA' / 'level_2' / '171'
    output:
        DATA_DIR / '{instrument}' / 'loop_cutouts.nc'
    wildcard_constraints:
        instrument=r"\b(XRT|EIS)\b"
    script:
        "trace_loop_hinode.py"
        
rule remove_background:
    input:
        DATA_DIR / '{instrument}' / 'loop_cutouts.nc'
    output:
        DATA_DIR / '{instrument}' / 'loop_cutouts_no_background.nc'
    script:
        "subtract_background.py"

